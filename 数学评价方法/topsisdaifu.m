% 假设我们有一个数据集 X，其中每一行代表一个样本，每一列代表一种属性
data = [1	3.71	0.0004	10.1	10.7;
0.964	25.87	0.0005	10.2	11.6;
1	2.42	0.0004	10.2	11.2;
0.97	3.67	0.0018	10.4	11.4;
0.943	0.74	0.00032	10.2	11;
1	0.73	0.00033	10.2	11.5;
0.986	4.24	0.00035	10.7	11.6;
1	1.78	0.00024	10.5	11.7;
0.968	14.96	0.00034	10.5	10.6];
%获取行数列数
n = size(data,1);
m = size(data,2);
%首先，把我们的原始指标矩阵正向化
%第三列极小型--->极大型
max_value = max(data(:,3)); 
data(:,3) = abs(data(:,3)-max_value);
disp("正向化后的矩阵为：");
disp(data);
% 正向化，使得所有指标取值都落在 [0, 1] 范围内
for j = 1:m
    data(:, j) = data(:, j) / sqrt(sum(data(:, j).^2));
end

% 指定权重向量 w，使得各个属性按照其重要性被赋予不同的权重
w = [0.1560	0.2662	0.2634	0.1947	0.1197];

% 计算加权决策矩阵 W
W = data .* repmat(w, n, 1);

% 确定正理想解 Z 和负理想解 F
Z = max(W, [], 1);
F = min(W, [], 1);

% 计算样本到正理想解和负理想解的距离
D_pos = sqrt(sum((W - repmat(Z, n, 1)).^2, 2));
D_neg = sqrt(sum((W - repmat(F, n, 1)).^2, 2));

% 计算综合评价指数 C
C = D_neg ./ (D_pos + D_neg);

% 将样本按照综合评价指数从大到小排序
[~, rank] = sort(C, 'descend');

% 输出排名最靠前的几个样本
k = 9;
disp(rank(1:k));