>> % 决策矩阵
decision_matrix = [
    93, 17, 95.17, 1018,0.093,2,46.2,0.00121,0.026,4.3,1.5;  % LB1-12
    95, 72, 71.57, 940,0.076,4.1,172,0.003,0.028,3.3,1.4;  %LB1-11
    95.2, 10, 258.99,782.000,0.331,5.6,79,0.008,0.028,2.56,0.72; % LB1-5
    94.7, 1,1,378,0.003,1,0,0.001,0.026,2.8,1.8;  % LB1-7
    83.020, 23.4, 23.030,318,0.072,3,82.5,0.003,0.026,3.1,1.7;  % LB1-6
    85.450, 1,1,855,0.001,4.1,0,0.001,0.028,1.36,1.28;  % LB1-13
    84.98, 1, 20,800,0.025,1,0,0.002,0.025,1.31,1.31;  %LB1-15
    83.56,15, 37.95,373,0.102,6,99,0.003,0.023,2.57,0.4; % LB1-14
    81.5, 15,31.06,766,0.041,4.2,75.5,0.001,0.023,2.84,0.86;  % LB1-8
    83.01, 1, 15, 453,0.033,1,0,0.001,0.028,2.39,1.24;  % LB1-9
    82.20, 1, 22, 537,0.041,1,0,0.001,0.036,1.610,1.610;  % LB1-10
    100, 234, 138.62,153,0.906,7.6,173.4,0.001,0.025,0.6,0.6;  % LB1-23
    84.32,7, 1113.32,1343,0.829,6.8,153.6,0.002,0.024,2.55,1.78; % LB1-17-T1
    81, 1,23, 1021,0.023,1,0,0.001,0.026,1.99,1.99;  % LB1-16
    81.23, 1, 22, 1084,0.02,1,0,0.002,0.028,1.6,1.6;  % LB1-18
];

% 对负向指标进行处理，将其转换为正向指标
% decision_matrix(:, 9) = max(decision_matrix(:, 9)) + 1 - decision_matrix(:, 9)
% decision_matrix(:, 10) = max(decision_matrix(:, 10)) + 1 - decision_matrix(:, 10)
% decision_matrix(:, 11) = max(decision_matrix(:, 11)) + 1 - decision_matrix(:, 11)
% 数据标准化
norm_matrix = zscore(decision_matrix)

% 计算标准间的相关系数
R = corrcoef(norm_matrix);

% 确定冲突度和信息量
n = size(norm_matrix, 2); % 标准的数量
conflict = zeros(1, n);
for i = 1:n
    conflict(i) = std(norm_matrix(:, i)) * (1 - sum(R(i, :)) / (n - 1));
end

% 计算权重
weights = conflict / sum(conflict);

% 显示结果
disp('指标的权重：');
disp(weights);

% 根据标准化的决策矩阵和权重计算得分
scores = norm_matrix * weights';

% 显示每个分支孔的得分
disp('每个分支孔的得分：');
for i = 1:size(scores, 1)
    fprintf('分支孔%d 的得分: %.2f\n', i, scores(i));
end
