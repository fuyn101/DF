% =========================================================================
%         钻孔阻隔水性能评价主程序 (步骤2 和 步骤3)
%
% 功能:
%   1. 对原始钻孔数据进行归一化。
%   2. 根据权重计算每个钻孔的综合得分。
%   3. 应用最大隶属度原则，确定每个钻孔的评价等级。
%   4. 以表格形式清晰展示最终评价结果。
% =========================================================================

%% 1. 初始化设置
clear; 
clc; 
close all;

%% 2. 用户输入数据 (您需要在此处填入您的真实数据)
% =======================================================================
% >>>>>>>>>>>>>>>>>>    请在此区域填入您的数据    <<<<<<<<<<<<<<<<<<<<<<
% =======================================================================

% --- 2.1 输入您的74个钻孔的8个指标的原始数据 ---
% 格式: 74行 x 8列的矩阵 (74个钻孔, 8个指标)
% 注意: 每一行代表一个钻孔，每一列代表一个指标。
% 为了让代码能直接运行, 这里生成一些随机的示例数据。
% 请务必用您的真实数据替换掉 `original_data`。
num_samples = 74; % 钻孔数量
num_indicators = 8; % 指标数量
original_data = [1.479832578	47.73	0.9410 	4.87 	1.4158 	0.7840 	2.225271024	0.092939881
1.658069295	54.39	0.9685 	5.38 	1.0978 	0.8795 	2.21291999	0.091608121
1.684438334	60.16	0.9251 	5.24 	1.1437 	0.7255 	2.206944147	0.091027262
1.367515564	61.49	0.9196 	5.52 	0.9832 	0.7500 	2.231105299	0.093624478
1.336315979	82.06	0.8285 	6.75 	0.4547 	0.7626 	2.225745203	0.093015451
1.421103381	68.03	0.9492 	5.74 	0.8891 	0.6579 	2.215318299	0.091909717
1.197381555	51.77	0.9528 	5.14 	1.2344 	0.6879 	2.247140955	0.095758953
1.252493636	59.51	0.9143 	5.54 	0.9676 	0.8300 	2.251040437	0.096392692
1.294879693	62.23	0.9310 	5.51 	0.9948 	0.8100 	2.254724301	0.097027582
1.280575857	50.35	0.9042 	5.70 	0.8373 	0.7243 	2.270720036	0.100455605
1.195524035	55.18	0.8816 	5.03 	1.2413 	0.5881 	2.276629973	0.101384896
1.303212285	56.52	0.8659 	5.52 	0.9411 	0.5223 	2.257264842	0.097771703
1.264548001	72.24	0.8913 	5.74 	0.8551 	0.7988 	2.272336383	0.101068803
1.29675506	66.02	0.8490 	6.13 	0.6670 	0.7131 	2.26451949	0.100002759
1.364149411	54.06	0.8629 	5.99 	0.7282 	0.7300 	2.265098703	0.099871232
1.185901357	55.42	0.8533 	5.73 	0.7286 	0.6500 	2.272221607	0.102817188
1.225749366	80.13	0.9018 	5.66 	0.8972 	0.5178 	2.27438736	0.105372195
1.265013015	87.61	0.8354 	6.81 	0.4423 	0.5650 	2.273765003	0.107087228
1.280717424	81.05	0.8818 	5.69 	0.8691 	0.5500 	2.276560491	0.107297032
1.221096479	69.32	0.9053 	6.05 	0.7293 	0.6975 	2.264263736	0.106503137
1.228003041	89.77	0.8659 	5.53 	0.9372 	0.4363 	2.271177669	0.106024726
1.052937308	76.09	0.9776 	4.49 	1.7408 	0.6554 	2.246003813	0.103936164
1.28144786	59.65	0.8750 	6.18 	0.6608 	0.7508 	2.2656773	0.108579173
1.348400008	74	0.8342 	5.93 	0.7382 	0.5876 	2.280006545	0.109209166
1.249598455	65.17	0.8847 	6.14 	0.6804 	0.9000 	2.260318356	0.107214087
1.322786194	66.95	0.8705 	6.06 	0.7033 	0.8996 	2.255396819	0.109123015
1.329552878	60.5	0.9127 	4.93 	0.7263 	0.5200 	1.989317156	0.082048767
1.257258643	62.05	0.9254 	4.84 	0.7941 	0.5000 	1.963740196	0.077615448
1.171358739	65.02	0.9234 	4.85 	0.7869 	0.4150 	1.963983291	0.075282358
1.264433794	60.19	0.9131 	4.93 	0.7259 	0.5320 	1.98483736	0.074685606
1.348561354	66.4	0.9130 	4.84 	0.7676 	0.5950 	1.981759925	0.071898765
1.549531836	63.87	0.9080 	4.91 	0.7245 	0.5250 	2.000577417	0.069883498
1.233144913	73.83	0.9018 	4.00 	1.2733 	0.8640 	1.974938167	0.103144066
1.387530346	75.05	0.9113 	4.15 	1.1905 	0.8430 	2.33758	0.08158
1.35366293	70.54	0.9033 	4.30 	1.0572 	0.8430 	2.102407769	0.097275085
1.360536786	67.69	0.9028 	4.48 	0.9407 	0.8100 	2.04748175	0.101469469
1.455776283	56.29	0.8926 	5.78 	0.3707 	0.7510 	2.294076539	0.095425369
1.341115207	65.9	0.9100 	4.66 	0.8549 	0.6570 	1.970445119	0.104984021
1.588533481	58.73	0.8945 	5.13 	0.6035 	0.9750 	2.086402033	0.104575886
1.569393841	54.56	0.8799 	5.37 	0.4865 	0.7960 	2.162419976	0.106938687
1.487526308	50.5	0.8522 	5.22 	0.4977 	0.8057 	2.27606	0.11564
1.155980276	66.8	0.9168 	4.82 	0.7866 	0.5710 	1.966964543	0.073909151
1.258861153	59.2	0.9224 	4.79 	0.8177 	0.5154 	1.976175504	0.076550421
1.240689299	60.4	0.9252 	4.82 	0.8075 	0.5100 	1.979085562	0.075074178
1.275965151	61.7	0.9195 	4.90 	0.7556 	0.5300 	1.982809126	0.076347903
1.397573659	63.9	0.9185 	4.88 	0.7626 	0.5170 	1.94219604	0.084783739
1.376119522	49.6	0.8917 	5.20 	0.5690 	0.7000 	1.953338853	0.105710227
1.207807031	65.9	0.9120 	4.79 	0.7928 	0.6650 	1.918274592	0.104430877
1.174295957	81.1	0.9158 	4.83 	0.7802 	0.6500 	1.900516116	0.10244685
1.257649981	72.9	0.8997 	4.02 	1.2500 	0.8470 	1.95846	0.10494
1.620603688	73.7	0.8048 	5.67 	0.2451 	0.8510 	2.0216	0.0674
1.580458559	68.01	0.8579 	5.35 	0.4520 	0.7520 	1.9975	0.11322
1.18462431	61.15	0.9137 	5.36 	0.8139 	0.9060 	2.204810055	0.118029708
1.203654273	74.35	0.8677 	5.78 	0.7064 	0.8471 	2.174800522	0.109586897
1.32995396	58.9	0.8736 	6.93 	0.3347 	0.7330 	2.14433399	0.100898422
1.323965986	54.25	0.8872 	5.63 	0.7952 	0.7953 	2.152123235	0.104123647
1.091156709	60.65	0.8500 	7.06 	0.2857 	0.8829 	2.20380712	0.113529148
1.097045477	62.9	0.9001 	5.96 	0.6667 	0.9149 	2.171501585	0.106149676
1.160428426	56.93	0.9179 	6.26 	0.5720 	0.9098 	2.152247271	0.101045745
1.117921733	60.37	0.8885 	6.37 	0.4793 	0.8400 	2.219565785	0.115283146
1.080011235	68.65	0.9527 	5.78 	0.8096 	0.8694 	2.172569445	0.103161879
1.359864582	55.81	0.8629 	6.46 	0.4583 	0.8462 	2.22503771	0.107450193
1.238776362	55.18	0.8500 	6.22 	0.5239 	0.8464 	2.211244168	0.106032968
1.158937167	55.25	0.9226 	4.77 	1.3847 	0.8479 	2.197410888	0.104165075
1.203873506	77.83	0.8673 	5.84 	0.6517 	0.8700 	2.181347232	0.101621184
1.299553906	79.58	0.7724 	7.43 	0.1599 	0.7889 	2.161841755	0.0980217
1.302589672	75.73	0.7943 	6.84 	0.2780 	0.6980 	2.14729829	0.09517037
1.331159036	78	0.8772 	6.28 	0.5179 	0.8500 	2.229179387	0.104484462
1.347666518	77.8	0.8444 	5.61 	0.6748 	0.8540 	2.175935005	0.097543455
1.389935528	81.41	0.8844 	6.71 	0.4013 	0.9300 	2.120660622	0.093474157
1.143320929	86.9	0.9075 	5.80 	0.7415 	0.9150 	2.186361564	0.11174424
1.231442451	77.09	0.8845 	6.46 	0.4563 	0.8520 	2.131097935	0.094527461
1.088518143	79.8	0.9158 	6.02 	0.6197 	0.9490 	2.158121045	0.101284871
1.115290839	80.72	0.9040 	5.70 	0.7681 	0.8090 	2.186954251	0.104246986
];

% --- 2.2 定义8个指标的类型 ---
% 'positive': 正向指标 (值越大越好)
% 'negative': 负向指标 (值越小越好)
% 这是一个示例，请根据您的8个指标的实际情况修改。
indicator_types = {'negative', 'positive', 'positive', 'positive', 'positive', 'positive', 'negative', 'negative'};

% --- 2.3 输入您已经计算好的8个指标的组合权重 ---
% 格式: 1行 x 8列的向量, 所有权重之和应为 1。
% 这是一个示例，请用您的真实权重替换。
indicator_weights = [0.180001251	0.183646908	0.0731917	0.093451643	0.132666311	0.108285234	0.124076642	0.10468031];

% =======================================================================
% >>>>>>>>>>>>>>>>>>>>>      数据填充结束      <<<<<<<<<<<<<<<<<<<<<<<<<
% =======================================================================


%% 3. 定义评价等级标准云 (与第一步中定义的一致)
labels = {'I级 (好)', 'II级 (较好)', 'III级 (一般)', 'IV级 (差)'};
standard_clouds = struct(...
    'Ex', {95.0, 82.5, 67.5, 30.0}, ...
    'En', {1.667, 2.500, 2.500, 10.000}, ...
    'Label', {labels{1}, labels{2}, labels{3}, labels{4}} ...
);

% 检查权重和是否为1
if abs(sum(indicator_weights) - 1) > 1e-6
    warning('警告: 指标权重之和不等于1，将进行归一化处理。');
    indicator_weights = indicator_weights / sum(indicator_weights);
end

%% 4. 执行评价流程

% 步骤 2.1: 数据归一化
fprintf('步骤2.1: 正在对原始数据进行归一化...\n');
normalized_data = normalize_data(original_data, indicator_types);

% 步骤 2.2: 计算综合得分
fprintf('步骤2.2: 正在计算各钻孔的综合得分...\n');
comprehensive_scores = calculate_scores(normalized_data, indicator_weights);

% 步骤 3: 确定评价等级
fprintf('步骤3: 正在根据最大隶属度原则确定评价等级...\n');
[determined_levels, subordination_matrix] = determine_levels(comprehensive_scores, standard_clouds);

%% 5. 显示和汇总结果
fprintf('\n======================= 最终评价结果汇总 =======================\n');
fprintf('%-10s | %-12s | %-18s | %-12s\n', '钻孔ID', '综合得分', '最大隶属度', '最终等级');
fprintf('------------------------------------------------------------------\n');

for i = 1:num_samples
    level_index = determined_levels(i);
    level_label = standard_clouds(level_index).Label;
    
    % 找到该钻孔对应的最大隶属度值
    max_subordination = subordination_matrix(i, level_index);
    
    fprintf('ZK%-8d |   %-10.4f |      %-14.4f | %s\n', i, comprehensive_scores(i), max_subordination, level_label);
end
fprintf('==================================================================\n');

%% (可选) 演示范例计算过程
% 以第一个钻孔为例，展示详细计算过程
fprintf('\n\n--- 计算过程演示 (以 ZK1 钻孔为例) ---\n');
zk1_score = comprehensive_scores(1);
fprintf('ZK1 的综合得分为: %.4f\n', zk1_score);
fprintf('计算其对各个等级标准云的隶属度:\n');
for k = 1:length(standard_clouds)
    mu_k = subordination_matrix(1, k);
    fprintf('  - 对 %s 的隶属度 μ = %.4f\n', standard_clouds(k).Label, mu_k);
end
[~, final_level_index] = max(subordination_matrix(1, :));
fprintf('比较可知，对 %s 的隶属度最大。\n', standard_clouds(final_level_index).Label);
fprintf('因此，判定 ZK1 的阻隔水性能为: %s\n', standard_clouds(final_level_index).Label);

